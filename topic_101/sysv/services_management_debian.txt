                      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━
                       SERVICES MANAGEMENT DEBIAN

                                gabriel
                      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━


Table of Contents
─────────────────

1. Introdução
2. Estrutura do SysVinit
3. Runlevels no Debian 5
4. Gerenciamento Básico de Serviços
.. 1. Iniciar serviço
.. 2. Parar serviço
.. 3. Reiniciar serviço
.. 4. Verificar status do serviço
5. Ativação e Desativação de Serviços nos Runlevels
6. Ferramentas Auxiliares
.. 1. update-rc.d
.. 2. sysv-rc-conf (interface ncurses)
7. Exemplos Comuns
8. Boas Práticas


1 Introdução
════════════

  O Debian 5 (Lenny) utiliza o sistema de inicialização clássico
  SysVinit, responsável por gerenciar os serviços e daemons do sistema.

  Esse método é baseado em scripts localizados em /etc/init.d/ e em
  links simbólicos organizados nos diretórios de runlevels em
  /etc/rc*.d/.


2 Estrutura do SysVinit
═══════════════════════

  • Diretório principal dos scripts: `/etc/init.d/'

    Cada serviço possui um script nesse diretório que permite iniciar,
    parar e reinicializar o serviço.

  • Diretórios de runlevels: `/etc/rc0.d/' até `/etc/rc6.d/'

    Esses diretórios contêm links simbólicos para os scripts de
    /etc/init.d/, indicando quais serviços devem iniciar ou parar em
    cada nível de execução.


3 Runlevels no Debian 5
═══════════════════════

  Os runlevels definem o estado operacional do sistema:
  • `0' : Desligamento
  • `1' : Modo monousuário (rescue mode)
  • `2' : Multiusuário (sem GUI, padrão no Debian)
  • `3' : Multiusuário (semelhante ao 2, mas usado em algumas
    configurações personalizadas)
  • `4' : Não utilizado por padrão
  • `5' : Multiusuário com GUI
  • `6' : Reinicialização

  No Debian 5, o runlevel padrão normalmente é o 2.


4 Gerenciamento Básico de Serviços
══════════════════════════════════

  Cada serviço pode ser controlado diretamente pelos scripts de
  /etc/init.d/.


4.1 Iniciar serviço
───────────────────

  ┌────
  │ /etc/init.d/<servico> start
  └────


4.2 Parar serviço
─────────────────

  ┌────
  │ /etc/init.d/<servico> stop
  └────


4.3 Reiniciar serviço
─────────────────────

  ┌────
  │ /etc/init.d/<servico> restart
  └────


4.4 Verificar status do serviço
───────────────────────────────

  ┌────
  │ /etc/init.d/<servico> status
  └────


5 Ativação e Desativação de Serviços nos Runlevels
══════════════════════════════════════════════════

  Para definir quais serviços iniciam em determinado runlevel,
  utilizam-se links simbólicos em /etc/rc*.d/.

  • Links que começam com “S” (Start): Iniciam o serviço ao entrar no
    runlevel.
  • Links que começam com “K” (Kill): Encerram o serviço ao entrar no
    runlevel.
  • O número após S ou K define a ordem de execução.

  Exemplo:
  ┌────
  │ /etc/rc2.d/S20ssh -> ../init.d/ssh
  └────


6 Ferramentas Auxiliares
════════════════════════

6.1 update-rc.d
───────────────

  Ferramenta para gerenciar os links simbólicos nos runlevels de forma
  simplificada.

  • Adicionar serviço ao boot (padrão do pacote):
  ┌────
  │ update-rc.d <servico> defaults
  └────


  • Remover serviço do boot:
  ┌────
  │ update-rc.d -f <servico> remove
  └────


  • Definir prioridades específicas:
  ┌────
  │ update-rc.d <servico> start 20 2 3 4 5 . stop 80 0 1 6 .
  └────


6.2 sysv-rc-conf (interface ncurses)
────────────────────────────────────

  Permite ativar ou desativar serviços em runlevels de forma interativa.
  ┌────
  │ apt-get install sysv-rc-conf
  │ sysv-rc-conf
  └────


7 Exemplos Comuns
═════════════════

  • Iniciar o servidor SSH manualmente:
  ┌────
  │ /etc/init.d/ssh start
  └────


  • Impedir que o Apache inicie automaticamente:
  ┌────
  │ update-rc.d -f apache2 remove
  └────


  • Configurar o MySQL para iniciar com prioridade 15:
  ┌────
  │ update-rc.d mysql defaults 15
  └────


8 Boas Práticas
═══════════════

  • Evite manipular manualmente links em /etc/rc*.d/, prefira usar
    update-rc.d.
  • Sempre verifique logs em /var/log/syslog ou específicos do serviço
    em caso de falhas.
  • Utilize o runlevel 1 (modo monousuário) para manutenção segura em
    serviços críticos.
