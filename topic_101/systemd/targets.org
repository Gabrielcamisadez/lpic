#+title: Targets
#+author: gabriel

* Intro
O systemd não trabalha com o conecito de níveis de execução, mas com unidades do tipo ~target~ que são usadas com a finalidade de agrupar outras unidades do systemd, de forma que quando uma unidade target é iniciada um gurpo de unidades também são carregadas.

*graphical.target* ->
Inicia os serviços do sistema e a sessão gráfica, ativa a unidade multi-user.target

*multi-user.target* ->
Inicia os serviços do sistema essenciais ou não para funcionamento do sistema, mas não carrega a interface gráfica.

*rescue.target* ->
No target de recuperação o sistema tenta montar todos os sitemas de arquivos e iniciar serviços importantes para o sistema, mas não ativa interfaces de rede e nem permite que mais usuários façam logon no sistema ao mesmo tempo.

* SystemD

Padrão em distros modernas (RHEL7+, Ubuntu 16.04+, Debian 8+), focado em paralelismo e unidades declarativas.

Processo systemd sempre PID 1.

** Unidades
Arquivos localizados em:
 * /etc/systemd/system/ (admin, prioridade maior)
 * /usr/lib/systemd/system/ ou /lib/systemd/system/ (pacotes)
 * /run/systemd/system/ (temporários)

** Tipos de unidades
 - .service → serviços
- .socket → comunicação
- .target → agrupamento de unidades
- .mount → pontos de montagem
- .timer → agendamento
- .device → dispositivos

** Targets (= runlevels)
- poweroff.target ≃ 0
- rescue.target ≃ 1
- multi-user.target ≃ 3
- graphical.target ≃ 5
- reboot.target ≃ 6

** systemctl
- systemctl start serviço
- systemctl stop serviço
- systemctl restart serviço
- systemctl status serviço
- systemctl enable serviço
- systemctl disable serviço
- systemctl mask serviço
- systemctl unmask serviço
- systemctl get-default
- systemctl set-default alvo.target

* Systemctl +
To get the default target unit ->
#+begin_src sh
systemctl get-default
#+end_src

To set a new dafault target unit ->
#+begin_src sh
systemctl set-default graphical.target
#+end_src

To list units from target type ->
#+begin_src sh
systemctl list-units --type target
#+end_src

To alternate the actual target unit ->
#+begin_src sh
systemctl isolate multi-user.target
#+end_src

Alternate to rescue.target ->
#+begin_src sh
systemctl isolate rescue.target
#+end_src

To reboot the system ->
#+begin_src sh
systemctl isolate reboot.target
#+end_src

Verify is on target is running ->
#+begin_src sh
systemctl is-enable cron.service
#+end_src
