#+title: Access Permissions
#+author: gabriel
#+description: 104.5

* permissões de acesso

As permissões são as informações que indicam que tipo de acesso pode ser realizado em determinado diretório ou arquivo.

No GNU/Linux cada arquivo ou diretório tem definido seu controle de acesso em permissões atribuídas para ->

*User* -> Usuário que criou o arquivo ou o diretório. O nome do owner do arquivo ou dir é o mesmo do user utilizado para entrar logar no sistema.
- Somente o owner ou o root podem modificar as permissões de acesso.

*Group* -> permissão atribuída a um grupo, permitindo vários users membros do grupo tenham acesso a um mesmo arquivo ou dir.
- Cada user pode fazer parte de 1 ou mais grupos no sistema.

*Other* -> Todos os users que não são owner e nem pertecem a um grupo com permissões no arquivo ou dir

As permissões que cada um destes podem receber são ->

*Read* -> r

*Write* -> w

*Exec* -> x

*Special* -> s

Arquivo de exemplo e suas respectivas permissions ->
#+begin_src sh
l tree.txt
-rw-rw-r-- 1 ilak ilak 4,2K set 20 23:09 tree.txt
#+end_src


As permissões em arquivos e dirs são sequências de 12 bits, bits de atributo e proteção no formato rwx rwx rwx, sendo que os três bit iniciais são utilizados para permissões especiais e os nove restantes para bits file mode





#+begin_src java
import java.util.ArrayList;

public class Main {
    public static void main(String[] args) {
        byte b = 10;
        long l = 10111111111111L;
        double d = 10.2;
        var f = 10.2f;
        var biel = "Gabriel";
        var junior = "Erasmo";
        String str = "";

        char[] meusDados = new char[10];

        for(char c : meusDados) {
            meusDados[0] = 'j';
            meusDados[1] = 'o';
            meusDados[2] = 'a';
            meusDados[3] = 'o';
            meusDados[4] = 'p';
            meusDados[5] = 'e';
            meusDados[6] = 'd';
            meusDados[7] = 'r';
            meusDados[8] = 'o';
            meusDados[9] = 's';
        }

        // if(meusDados.length > 0){
        //     for(char c : meusDados) {
        //         System.out.println(c);
        //     }
        // }

        ArrayList<String> names = new ArrayList<>();
        names.add("joao");
        names.add("biel");
        names.add("pedro");
        names.add("jose");

        names.remove("pedro");

        if(names.isEmpty()){
            System.out.println(names.size());
        } else{
            for(String name : names){
                System.out.println(name);
            }
        }

        ArrayList<Integer> numbers = new ArrayList<>();
        numbers.add(1);
        numbers.add(2);
        numbers.add(3);
        numbers.add(4);
        numbers.add(5);

        for(int i =0 ; i < numbers.size(); i++){
            System.out.println(numbers.get(i));
        }

    }}
#+end_src
